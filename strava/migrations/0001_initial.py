# Generated by Django 5.0 on 2025-03-18 01:25

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Atividade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da atividade', max_length=100, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome')),
                ('observacoes', models.CharField(blank=True, help_text='Digite suas observações (Opcional)', max_length=100, null=True, validators=[django.core.validators.MinLengthValidator(0), django.core.validators.MaxLengthValidator(100)], verbose_name='Observações')),
                ('data', models.DateField(blank=True, help_text='Selecione a data', null=True, verbose_name='Data')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRUN', 'Corrida de Trilhas'), ('BIK', 'Treino de Bicicleta'), ('WAL', 'Caminhada'), ('HIT', 'Treino de Alta Intensidade'), ('STR', 'Treino de Força'), ('CAR', 'Treino Aeróbico'), ('SWM', 'Natação')], default='', help_text='Selecione o Esporte', max_length=5, verbose_name='Esporte')),
                ('inicio', models.TimeField(help_text='Selecione o inicio', verbose_name='Inicio')),
                ('duracao', models.TimeField(help_text='Selecione a duração', verbose_name='Duração')),
                ('distancia', models.FloatField(blank=True, default=0.0, help_text='Digite a distância percorrida', null=True, verbose_name='Distância')),
                ('ritmo', models.TimeField(blank=True, help_text='Selecione o ritmo', null=True, verbose_name='Ritmo')),
                ('calorias', models.IntegerField(default=0, help_text='Calorias gastas', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Calorias')),
                ('elevacao_total', models.IntegerField(default=0, help_text='Elevação total', verbose_name='Elevação')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Clube',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Digite o nome', max_length=200, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome')),
                ('local', models.CharField(help_text='Digite o local', max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(100)], verbose_name='Local')),
                ('pais', models.CharField(help_text='Digite o país', max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(100)], verbose_name='País')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRUN', 'Corrida de Trilhas'), ('BIK', 'Treino de Bicicleta'), ('WAL', 'Caminhada'), ('HIT', 'Treino de Alta Intensidade'), ('STR', 'Treino de Força'), ('CAR', 'Treino Aeróbico'), ('SWM', 'Natação')], default=0.0, help_text='Selecione o esporte', max_length=5, verbose_name='Esporte')),
                ('biografia', models.TextField(blank=True, help_text='Digite sua biografia (opcional)', null=True, verbose_name='Biografia')),
                ('url', models.URLField(help_text='Digite a URL da pagina', validators=[django.core.validators.MinLengthValidator(15), django.core.validators.MaxLengthValidator(150)], verbose_name='URL')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(50)], verbose_name='Nome')),
                ('marca', models.CharField(help_text='Marca do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(50)], verbose_name='Marca')),
                ('modelo', models.CharField(help_text='Modelo do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(50)], verbose_name='Modelo')),
                ('apelido', models.CharField(help_text='Apelido do equipamento', max_length=50, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(50)], verbose_name='Apelido')),
                ('tipo_equipamento', models.CharField(choices=[('TEN', 'Tênis'), ('BIK', 'Bicicleta'), ('SDV', 'Dispositivo Inteligente')], default='', help_text='Selecione o tipo do equipamento', max_length=5, verbose_name='Equipamento')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRUN', 'Corrida de Trilhas'), ('BIK', 'Treino de Bicicleta'), ('WAL', 'Caminhada'), ('HIT', 'Treino de Alta Intensidade'), ('STR', 'Treino de Força'), ('CAR', 'Treino Aeróbico'), ('SWM', 'Natação')], default='', help_text='Selecione o Esporte', max_length=5, verbose_name='Esporte')),
                ('distancia_total', models.FloatField(blank=True, help_text='Distancia total', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Distancia total')),
                ('distancia_prevista', models.IntegerField(help_text='Distancia prevista', validators=[django.core.validators.MinValueValidator(400)], verbose_name='Distancia prevista')),
                ('peso', models.FloatField(blank=True, help_text='Digite seu peso', null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Peso')),
                ('notas', models.TextField(blank=True, help_text='Digite sua biografia (opcional)', null=True, verbose_name='Biografia')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Digite o seu email', max_length=254, unique=True, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(100)], verbose_name='E-mail')),
                ('nome', models.CharField(help_text='Digite o seu nome', max_length=200, validators=[django.core.validators.MinLengthValidator(10), django.core.validators.MaxLengthValidator(100)], verbose_name='Nome')),
                ('cpf', models.CharField(help_text='Digite o seu CPF', max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11), django.core.validators.MaxLengthValidator(11)], verbose_name='CPF')),
                ('senha', models.CharField(help_text='Digite sua senha', max_length=20, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(20)], verbose_name='Senha')),
                ('data_nascimento', models.DateField(help_text='Digite data de nascimento', verbose_name='Data de nascimento')),
                ('local', models.CharField(help_text='Digite o seu local', max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(100)], verbose_name='Local')),
                ('pais', models.CharField(help_text='Digite o seu país', max_length=100, validators=[django.core.validators.MinLengthValidator(3), django.core.validators.MaxLengthValidator(100)], verbose_name='País')),
                ('genero', models.CharField(choices=[('MAN', 'Homem'), ('WOM', 'Mulher'), ('NBI', 'Não-binário'), ('NIN', 'Não informado')], default='NIN', help_text='Selecione o genero', max_length=5, verbose_name='Gênero')),
                ('peso', models.FloatField(blank=True, default=0.0, help_text='Digite seu peso', null=True, validators=[django.core.validators.MinValueValidator(20)], verbose_name='Peso')),
                ('pagina_pessoal', models.URLField(help_text='Digite a URL da sua pagina', validators=[django.core.validators.MinLengthValidator(15), django.core.validators.MaxLengthValidator(150)], verbose_name='URL')),
                ('biografia', models.TextField(blank=True, help_text='Digite sua biografia (opcional)', null=True, verbose_name='Biografia')),
                ('premium', models.BooleanField(default=False, help_text='É premium?', verbose_name='Premium')),
                ('membro_desde', models.DateField(auto_now_add=True, help_text='Digite a data', verbose_name='Data de quando começou')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome para o record', max_length=20, validators=[django.core.validators.MinLengthValidator(2), django.core.validators.MaxLengthValidator(20)], verbose_name='Nome')),
                ('tipo_marca', models.CharField(choices=[('100M', '100 metros'), ('400M', '400 metros'), ('1KM', '1 Quilômetro'), ('5KM', '5 Quilômetros'), ('10KM', '10 Quilômetros'), ('15KM', '15 Quilômetros'), ('20KM', '20 Quilômetros'), ('MEIA', 'Meia maratona'), ('30KM', '30 Quilômetros'), ('MARATONA', 'Maratona'), ('LONGA_DISTANCIA', 'Maior distância'), ('LONGA_DURACAO', 'Maior duração')], default=0.0, help_text='Selecione sua marca', max_length=15, verbose_name='Marca')),
                ('tipo_esporte', models.CharField(choices=[('RUN', 'Corrida'), ('TRUN', 'Corrida de Trilhas'), ('BIK', 'Treino de Bicicleta'), ('WAL', 'Caminhada'), ('HIT', 'Treino de Alta Intensidade'), ('STR', 'Treino de Força'), ('CAR', 'Treino Aeróbico'), ('SWM', 'Natação')], default=0.0, help_text='Selecione seu esporte', max_length=5, verbose_name='Esporte')),
                ('ritmo', models.TimeField(help_text='Digite o ritmo', verbose_name='Ritmo')),
                ('duracao', models.TimeField(help_text='Digite a duração', verbose_name='Duração')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
